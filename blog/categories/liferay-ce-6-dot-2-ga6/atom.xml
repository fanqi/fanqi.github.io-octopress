<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Liferay Ce 6.2 Ga6 | 范琪的个人博客]]></title>
  <link href="http://www.fanqi.xyz/blog/categories/liferay-ce-6-dot-2-ga6/atom.xml" rel="self"/>
  <link href="http://www.fanqi.xyz/"/>
  <updated>2016-06-03T14:04:48+08:00</updated>
  <id>http://www.fanqi.xyz/</id>
  <author>
    <name><![CDATA[范琪]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Liferay Portlet 生命周期]]></title>
    <link href="http://www.fanqi.xyz/blog/2016/05/25/liferay-portlet-lifecycle/"/>
    <updated>2016-05-25T09:02:46+08:00</updated>
    <id>http://www.fanqi.xyz/blog/2016/05/25/liferay-portlet-lifecycle</id>
    <content type="html"><![CDATA[<h2>概述</h2>

<p>了解portlet的生命周期，对于liferay portlet开发者来说是一个基本的要求。
portlet的生命周期分为六个阶段：<br/>
1. init
1. render
1. processAction
1. processEvent
1. serveResource
1. destroy</p>

<h2>示例代码</h2>

<p>view.jsp
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;%@ taglib uri=&ldquo;&lt;a href="http://java.sun.com/portlet_2_0"&gt;http://java.sun.com/portlet_2_0&lt;/a&gt;&rdquo; prefix=&ldquo;portlet&rdquo;%&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&lt;portlet:defineObjects /&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;This is the
</span><span class='line'>&lt;b&gt;Lifecycle&lt;/b&gt;
</span><span class='line'>portlet in View mode.
</span><span class='line'>&lt;br&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&lt;portlet:renderURL var=&ldquo;viewURL&rdquo; /&gt;
</span><span class='line'>&lt;a href="&lt;%=viewURL%&gt;&ldquo;&gt;viewURL&lt;/a&gt;
</span><span class='line'>&lt;br&gt;
</span><span class='line'>&lt;portlet:actionURL var="actionURL&rdquo; name=&ldquo;doAction&rdquo;&gt;&lt;/portlet:actionURL&gt;
</span><span class='line'>&lt;a href="&lt;%=actionURL%&gt;&ldquo;&gt;actionURL&lt;/a&gt;
</span><span class='line'>&lt;br&gt;
</span><span class='line'>&lt;portlet:resourceURL var="resourceURL&rdquo; /&gt;
</span><span class='line'>&lt;a href="&lt;%=resourceURL%&gt;&ldquo;&gt;resourceURL&lt;/a&gt;
</span><span class='line'>&lt;br&gt;
</span><span class='line'>&lt;code&gt;
</span><span class='line'>LifecyclePortlet.java
</span><span class='line'>&lt;/code&gt; java
</span><span class='line'>public class LifecyclePortlet extends MVCPortlet {&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;@Override
</span><span class='line'>public void init() throws PortletException {
</span><span class='line'>    System.out.println("Lifecycle Phase (MVCPortlet) : init");
</span><span class='line'>    super.init();
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>@Override
</span><span class='line'>public void init(PortletConfig config) throws PortletException {
</span><span class='line'>    System.out.println("Lifecycle Phase (GenericPortlet) : init");
</span><span class='line'>    super.init(config);
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>@Override
</span><span class='line'>public void render(RenderRequest arg0, RenderResponse arg1)
</span><span class='line'>        throws PortletException, IOException {
</span><span class='line'>    System.out.println("Lifecycle Phase: render");
</span><span class='line'>    super.render(arg0, arg1);
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>@Override
</span><span class='line'>public void processAction(ActionRequest actionRequest,
</span><span class='line'>        ActionResponse actionResponse) throws IOException, PortletException {
</span><span class='line'>    System.out.println("Lifecycle Phase: processAction");
</span><span class='line'>    super.processAction(actionRequest, actionResponse);
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>public void doAction(ActionRequest actionRequest,
</span><span class='line'>        ActionResponse actionResponse) throws IOException, PortletException {
</span><span class='line'>    System.out.println("LifecyclePortlet: doAction");
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>@Override
</span><span class='line'>public void processEvent(EventRequest arg0, EventResponse arg1)
</span><span class='line'>        throws PortletException, IOException {
</span><span class='line'>    System.out.println("Lifecycle Phase: processEvent");
</span><span class='line'>    super.processEvent(arg0, arg1);
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>@Override
</span><span class='line'>public void serveResource(ResourceRequest resourceRequest,
</span><span class='line'>        ResourceResponse resourceResponse) throws IOException,
</span><span class='line'>        PortletException {
</span><span class='line'>    System.out.println("Lifecycle Phase: serveResource");
</span><span class='line'>    resourceResponse.setContentType("text/html;charset=UTF-8");
</span><span class='line'>    PrintWriter out = null;
</span><span class='line'>    try {
</span><span class='line'>        out = resourceResponse.getWriter();
</span><span class='line'>    } catch (IOException e) {
</span><span class='line'>        e.printStackTrace();
</span><span class='line'>    }
</span><span class='line'>    String result = "serveResource";
</span><span class='line'>    out.println(result);
</span><span class='line'>    out.flush();
</span><span class='line'>    out.close();
</span><span class='line'>    super.serveResource(resourceRequest, resourceResponse);
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>@Override
</span><span class='line'>public void destroy() {
</span><span class='line'>    System.out.println("Lifecycle Phase (GenericPortlet) : destroy");
</span><span class='line'>    super.destroy();
</span><span class='line'>}
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;}</span></code></pre></td></tr></table></div></figure></p>

<h2>init</h2>

<p>一个portlet在portlet容器中被部署及实例化的时候，就会调用init方法，该方法在portlet生命周期中仅仅只会被调用一次。<br/>
init阶段对应init()和init(PortletConfig config)两个实现方法，这两个方法分别定义在MVCPortlet和GenericPortlet，而GenericPortlet是MVCPortlet的父类，因此init(PortletConfig config)方法先执行。<br/>
init执行如下：<br/>
<code>
00:58:09,934 INFO  [localhost-startStop-7][PortletHotDeployListener:344] Registering portlets for lportal-ce-6.2.5-lifecycle-portlet
Lifecycle Phase (GenericPortlet) : init
Lifecycle Phase (MVCPortlet) : init
00:58:09,964 INFO  [localhost-startStop-7][PortletHotDeployListener:492] 1 portlet for lportal-ce-6.2.5-lifecycle-portlet is available for use
</code></p>

<h2>render</h2>

<p>在portal页面中显示portlet的内容，就会调用render方法。<br/>
render方法就是负责生成portlethtml内容。<br/>
也可以通过renderURL来调用render方法加载不同的网页内容。
在portlet的生命周期中，render方法应该是被调用次数最多的。
<code>
Lifecycle Phase (GenericPortle) : render
</code></p>

<h2>processAction</h2>

<p>当有任何action执行的时候，processAction都被先调用。
例如通过actionURL向后台action方法提交表单数据，就会先触发processAction。
在portlet的生命周期中，processAction方法能够被多次调用。
<code>
Lifecycle Phase (MVCPortlet) : processAction
LifecyclePortlet: doAction
</code></p>

<h2>processEvent</h2>

<p>当任何时间被触发的时候，就会调用processEvent方法。</p>

<h2>serveResource</h2>

<p>通过serveResource方法，能够获取portlet提供的服务端资源，包括html、json、xml等。<br/>
在jsp中我们能够通过请求resourceURL，来调用serveResource方法。<br/>
ajax也能够和resourceURL结合使用。<br/>
在portlet的生命周期中，serveResource能够被多次调用。<br/>
<code>
Lifecycle Phase (MVCPortlet) : serveResource
</code></p>

<h2>destroy</h2>

<p>当卸载一个portlet的时候，就会调用它的destroy方法。
在portlet的生命周期中，destroy方法只会被执行一次。
<code>
01:35:10,248 INFO  [ContainerBackgroundProcessor[StandardEngine[Catalina]]][PortletHotDeployListener:525] Unregistering portlets for lportal-ce-6.2.5-demo-portlet
Lifecycle Phase (GenericPortlet) : destroy
01:35:10,250 INFO  [ContainerBackgroundProcessor[StandardEngine[Catalina]]][PortletHotDeployListener:560] 1 portlet for lportal-ce-6.2.5-lifecycle-portlet was unregistered
</code></p>

<h2>参考资源</h2>

<ol>
<li><a href="http://liferaytutorial.blogspot.com/2013/04/portlet-lifecycle.html">http://liferaytutorial.blogspot.com/2013/04/portlet-lifecycle.html</a></li>
<li><a href="http://www.opensource-techblog.com/2014/12/introduction-to-portlet-phases-and.html">http://www.opensource-techblog.com/2014/12/introduction-to-portlet-phases-and.html</a></li>
<li><a href="http://proliferay.com/jsr-286-portlet-life-cycle/">http://proliferay.com/jsr-286-portlet-life-cycle/</a></li>
</ol>

]]></content>
  </entry>
  
</feed>
