<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ‘ssh’ | 范琪的个人博客]]></title>
  <link href="http://www.fanqi.xyz/blog/categories/ssh/atom.xml" rel="self"/>
  <link href="http://www.fanqi.xyz/"/>
  <updated>2016-06-03T14:04:48+08:00</updated>
  <id>http://www.fanqi.xyz/</id>
  <author>
    <name><![CDATA[范琪]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mac中的SSH Keys配置]]></title>
    <link href="http://www.fanqi.xyz/blog/2016/05/27/ssh-no-password/"/>
    <updated>2016-05-27T09:51:47+08:00</updated>
    <id>http://www.fanqi.xyz/blog/2016/05/27/ssh-no-password</id>
    <content type="html"><![CDATA[<h2>SSH Keys</h2>

<p>SSH key可以让你在你的电脑和服务器之间建立安全的加密连接，同时避免每次连接都需要输入密码的麻烦。
像github、git@oschina都支持SSH key。</p>

<h2>ssh免密码配置</h2>

<p>以github上的ssh免密码配置为例，步骤如下：</p>

<h3>生成ssh密钥对</h3>

<p>使用github的邮箱账号，生成ssh密钥对。
<code>
ssh-keygen -t rsa -C "github@fanqi.xyz"
</code>
默认情况下会在~/.ssh/目录下生成一对密钥文件，私钥id_rsa，公钥id_rsa.pub。</p>

<h3>查看公钥内容，并将其添加到github</h3>

<p>github ssh配置链接：<a href="https://github.com/settings/keys">https://github.com/settings/keys</a>
<code>
cat id_rsa.pub
</code></p>

<h3>验证是否添加成功</h3>

<pre><code>ssh -T git@github.com
Hi fanqi! You've successfully authenticated, but GitHub does not provide shell access.
</code></pre>

<h2>多ssh keys配置</h2>

<p>多ssh keys配置会由两种情况：<br/>
1. 每个网站的用户名及邮箱都一致<br/>
2. 每个网站的用户名和邮箱不一致<br/>
对于第一种情况，应该是只需要生成一次密钥对，将同一个公钥添加到不同网站的ssh配置中，即可生效。  <br/>
对于第二种情况，就需要进行以下配置了。</p>

<h3>为每个网站生成特定的密钥对,指定不同的密钥文件名称</h3>

<pre><code>$ ssh-keygen -t rsa -C "github@fanqi.xyz"
Generating public/private rsa key pair.
Enter file in which to save the key (/Users/fanqi/.ssh/id_rsa): /Users/fanqi/.ssh/github_rsa
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in github_rsa.
Your public key has been saved in github_rsa.pub.
</code></pre>

<h3>添加密钥到ssh-agent</h3>

<p>ssh-agent是一种控制用来保存公钥身份验证所使用的私钥的程序，其实ssh-agent就是一个密钥管理器，运行ssh-agent以后，使用ssh-add将私钥交给ssh-agent保管，其他程序需要身份验证的时候可以将验证申请交给ssh-agent来完成整个认证过程。<br/>
ssh-agent在mac中默认是启用的，可以通过以下命名查看：<br/>
<code>
eval "$(ssh-agent -s)"
</code>
如果没有启用，则运行以下命令：
<code>
ssh-agent bash
</code>
添加生成的 SSH key 到 ssh-agent。
<code>
ssh-add github_rsa
</code></p>

<h3>添加config配置文件</h3>

<pre><code>vi ~/.ssh/config
</code></pre>

<p>并进行如下配置：
```</p>

<h1>github</h1>

<p>Host github.com
    HostName github.com
    PreferredAuthentications publickey
    IdentityFile ~/.ssh/github_rsa</p>

<h1>oschina</h1>

<p>Host git.oschina.net
    HostName git.oschina.net
    PreferredAuthentications publickey
    IdentityFile ~/.ssh/oschina_rsa</p>

<p>```</p>

<h2>相关资料</h2>

<ol>
<li><a href="https://segmentfault.com/a/1190000002645623">https://segmentfault.com/a/1190000002645623</a></li>
<li><a href="http://www.cnblogs.com/fanyong/p/3962455.html">http://www.cnblogs.com/fanyong/p/3962455.html</a></li>
<li><a href="https://segmentfault.com/q/1010000000835302/a-1020000000883441">https://segmentfault.com/q/1010000000835302/a-1020000000883441</a></li>
<li><a href="http://www.ooso.net/archives/644">http://www.ooso.net/archives/644</a></li>
</ol>

]]></content>
  </entry>
  
</feed>
