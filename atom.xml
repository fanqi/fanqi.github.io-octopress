<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[范琪的个人博客]]></title>
  <link href="http://www.fanqi.xyz/atom.xml" rel="self"/>
  <link href="http://www.fanqi.xyz/"/>
  <updated>2016-06-02T23:51:23+08:00</updated>
  <id>http://www.fanqi.xyz/</id>
  <author>
    <name><![CDATA[范琪]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[安装mysql-5.7.12-winx64解压版]]></title>
    <link href="http://www.fanqi.xyz/blog/2016/06/02/install-mysql-5-dot-7-12-winx64-decompression/"/>
    <updated>2016-06-02T22:52:02+08:00</updated>
    <id>http://www.fanqi.xyz/blog/2016/06/02/install-mysql-5-dot-7-12-winx64-decompression</id>
    <content type="html"><![CDATA[<h2>安装准备</h2>

<ol>
<li>windows server 2008</li>
<li><a href="http://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.12-winx64.zip">mysql-5.7.12-winx64.zip</a></li>
</ol>


<h2>目录规划</h2>

<p>安装目录：C:\mysql-5.7.12-winx64（解压时会自动创建）
数据目录：D:\mysqldata\5.7.12\data（需要手工创建）</p>

<h2>安装步骤</h2>

<h3>1. 解压zip包到安装目录</h3>

<h3>2. 配置my.ini文件</h3>

<p>复制安装目录中的my-default.ini，重命名为my.ini，并打开进行如下修改：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>basedir = C:/mysql-5.7.12-winx64
</span><span class='line'>datadir = D:/mysqldata/5.7.12/data</span></code></pre></td></tr></table></div></figure>


<blockquote><p><strong>注意：</strong> <br/>
1. 去掉basedir和datadir前面的#<br/>
2. basedir添加的是MySQL的解压路径；<br/>
3. datadir添加的是MySQL的data文件夹路径。</p></blockquote>

<h3>3. 配置系统环境变量</h3>

<p>MYSQL_HOME=C:\mysql-5.7.12-winx64<br/>
PATH=PATH;%MYSQL_HOME%\bin</p>

<h3>4. 初始化目录</h3>

<p>使用系统管理员命令打开cmd命令提示窗口，并进入安装目录执行以下语句初始化目录：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mysqld --initialize-insecure --user=mysql</span></code></pre></td></tr></table></div></figure>


<p>初始化完成没有任何提示。</p>

<h3>5. 安装mysql</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mysqld install</span></code></pre></td></tr></table></div></figure>


<p>出现“Service successfully installed”就代表MySQL服务成功安装了。</p>

<h3>6. 启动mysql服务</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>net start mysql</span></code></pre></td></tr></table></div></figure>


<p>正常启动会出现“MySQL服务启动成功”。</p>

<h3>7. 修改root账号密码，并允许远程访问</h3>

<p>登录mysql，root的默认密码为空，直接回车即可。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mysql -u root -p</span></code></pre></td></tr></table></div></figure>


<p>使用以下命令修改密码：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>update mysql.user set authentication_string=password('root'),host='%' where user='root' and host='localhost';</span></code></pre></td></tr></table></div></figure>


<p>5.7版本的mysql的user表中没有password字段，而是利用authentication_string字段存储加密后的密码。<br/>
然后，重启mysql服务:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>net stop mysql
</span><span class='line'>net start mysql</span></code></pre></td></tr></table></div></figure>


<h3>8. 远程连接mysql</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mysql -h 192.168.1.86 -P 3306 -u root -p</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Liferay Dynamic Query API]]></title>
    <link href="http://www.fanqi.xyz/blog/2016/06/01/liferay-dynamic-query-api/"/>
    <updated>2016-06-01T13:34:02+08:00</updated>
    <id>http://www.fanqi.xyz/blog/2016/06/01/liferay-dynamic-query-api</id>
    <content type="html"><![CDATA[<h2>简介</h2>

<p>Liferay提供了几种方法定义复杂的查询用来检索数据库中的数据。</p>

<p>通常情况下，在每个service Entity中，通过定义一些'finder'方法，可以便捷地满足基本的数据查询操作。</p>

<p>但是，有时候我们可能会遇到以下几种finder查询并不能满足的情况：</p>

<ul>
<li>过于复杂的查询，例如子查询</li>
<li>需要实现一些聚合操作，像min、max、avg等</li>
<li>想得到复合对象或元组而不是映射的对象类型</li>
<li>查询优化</li>
<li>复杂的数据访问，像报表等</li>
<li>要实现这个目的，就需要通过Liferay提供的Hibernate的Dynamic Query API实现。</li>
</ul>


<p>在本文中，我们将演示如何构建不同类型的Dynamic Query并执行它们。</p>

<h2>基本语法</h2>

<p>在Liferay中构建一个Dynamic Query基本语法的代码如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>//构建动态查询，相当于select * from Entity_Name
</span><span class='line'>DynamicQuery dynamicQuery = DynamicQueryFactoryUtil.forClass(Entity_Name.class);
</span><span class='line'>//DynamicQueryFactoryUtil.forClass(Entity_Name.class,PortalClassLoaderUtil.getClassLoader());
</span><span class='line'>//设置查询列
</span><span class='line'>dynamicQuery.setProjection(Projection projection);
</span><span class='line'>//设置查询条件
</span><span class='line'>dynamicQuery.add(Criterion criterion);
</span><span class='line'>//设置排序规则
</span><span class='line'>dynamicQuery.addOrder(Order order);
</span><span class='line'>//设置返回结果集的范围
</span><span class='line'>dynamicQuery.setLimit(int start, int end);
</span><span class='line'>//执行动态查询，得到结果集
</span><span class='line'>Entity_NameLocalServiceUtil.dynamicQuery(dynamicQuery);</span></code></pre></td></tr></table></div></figure>


<p>其中，</p>

<p>Entity_Name：实体名称，就是service.xml中制定的Entity名称。</p>

<p>DynamicQuery也可以通过DynamicQuery forClass(Class&lt;?> clazz, ClassLoader classLoader)来初始化。</p>

<h2>Dynamic Query应用示例</h2>

<h3>1、select * from organization_;</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>DynamicQuery dynamicQuery = DynamicQueryFactoryUtil.forClass(Organization.class);
</span><span class='line'>List&lt;Organization&gt; Organizations = OrganizationLocalServiceUtil.dynamicQuery(dynamicQuery);</span></code></pre></td></tr></table></div></figure>


<h3>2、select * from organization_ where parentOrganizationId=0;</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>DynamicQuery dynamicQuery = DynamicQueryFactoryUtil.forClass(Organization.class);
</span><span class='line'>dynamicQuery.add(PropertyFactoryUtil.forName("parentOrganizationId").eq(0L));
</span><span class='line'>List&lt;Organization&gt; Organizations = OrganizationLocalServiceUtil.dynamicQuery(dynamicQuery);</span></code></pre></td></tr></table></div></figure>


<h3>3、like、>、>=、&lt;、&lt;=、between &hellip; and &hellip;</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// select * from organization_ where name like '组织机构%';
</span><span class='line'>dynamicQuery.add(PropertyFactoryUtil.forName("parentOrganizationId").like("组织机构%"));
</span><span class='line'>// select * from organization_ where organizationId &gt;21212;
</span><span class='line'>dynamicQuery.add(PropertyFactoryUtil.forName("organizationId").gt(21212L));
</span><span class='line'>// select * from organization_ where organizationId &gt;=21212;
</span><span class='line'>dynamicQuery.add(PropertyFactoryUtil.forName("organizationId").ge(21212L));
</span><span class='line'>// select * from organization_ where organizationId &lt;21224;
</span><span class='line'>dynamicQuery.add(PropertyFactoryUtil.forName("organizationId").lt(21224L));
</span><span class='line'>// select * from organization_ where organizationId &lt;=21224;
</span><span class='line'>dynamicQuery.add(PropertyFactoryUtil.forName("organizationId").le(21224L));
</span><span class='line'>// select * from organization_ where organizationId between 21212 and 21224;
</span><span class='line'>dynamicQuery.add(PropertyFactoryUtil.forName("organizationId").between(21212L, 21224L));</span></code></pre></td></tr></table></div></figure>


<h3>4、and / or</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// select * from organization_ where organizationId &gt;= 21212 and organizationId &lt;=21224;
</span><span class='line'>// 第1种方法（不适用于or）
</span><span class='line'>dynamicQuery.add(PropertyFactoryUtil.forName("organizationId").ge(21212L));
</span><span class='line'>dynamicQuery.add(PropertyFactoryUtil.forName("organizationId").le(21224L));
</span><span class='line'>// 第2种方法（适用于or，使用RestrictionsFactoryUtil.or）
</span><span class='line'>Criterion criterion = null;
</span><span class='line'>criterion = RestrictionsFactoryUtil.ge("organizationId", 21212L);
</span><span class='line'>criterion = RestrictionsFactoryUtil.and(criterion, RestrictionsFactoryUtil.le("organizationId", 21224L));
</span><span class='line'>dynamicQuery.add(criterion);
</span><span class='line'>// 第3种方法（适用于or，使用RestrictionsFactoryUtil.disjunction()）
</span><span class='line'>Junction junction = RestrictionsFactoryUtil.conjunction();
</span><span class='line'>junction.add(PropertyFactoryUtil.forName("organizationId").ge(21212L));
</span><span class='line'>junction.add(PropertyFactoryUtil.forName("organizationId").le(21224L));
</span><span class='line'>dynamicQuery.add(junction);</span></code></pre></td></tr></table></div></figure>


<h3>5、order by</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// select * from organization_ order by organizationId asc;
</span><span class='line'>dynamicQuery.addOrder(OrderFactoryUtil.asc("organizationId"));
</span><span class='line'>// select * from organization_ order by organizationId desc;
</span><span class='line'>dynamicQuery.addOrder(OrderFactoryUtil.desc("organizationId"));</span></code></pre></td></tr></table></div></figure>


<h3>6、子查询</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// select * from organization_ where parentOrganizationId=(select organizationId from organization_ where name='组织机构1');
</span><span class='line'>DynamicQuery subDynamicQuery = DynamicQueryFactoryUtil.forClass(Organization.class);
</span><span class='line'>subDynamicQuery.setProjection(ProjectionFactoryUtil.property("organizationId"));
</span><span class='line'>subDynamicQuery.add(PropertyFactoryUtil.forName("name").eq("组织机构1"));
</span><span class='line'>dynamicQuery.add(PropertyFactoryUtil.forName("parentOrganizationId").in(subDynamicQuery));</span></code></pre></td></tr></table></div></figure>


<h3>7、自定义列</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// select name from organization_;
</span><span class='line'>dynamicQuery.setProjection(ProjectionFactoryUtil.property("name"));
</span><span class='line'>List&lt;Object&gt; names = OrganizationLocalServiceUtil.dynamicQuery(dynamicQuery);
</span><span class='line'>for(Object name: names){
</span><span class='line'>    System.out.println(name);
</span><span class='line'>}
</span><span class='line'>// select organizationId,name from organization_;
</span><span class='line'>ProjectionList projectionList = ProjectionFactoryUtil.projectionList();
</span><span class='line'>projectionList.add(ProjectionFactoryUtil.property("organizationId"));
</span><span class='line'>projectionList.add(ProjectionFactoryUtil.property("name"));
</span><span class='line'>dynamicQuery.setProjection(projectionList);
</span><span class='line'>List&lt;Object[]&gt; organizations = OrganizationLocalServiceUtil.dynamicQuery(dynamicQuery);
</span><span class='line'>for(Object[] organization: organizations){
</span><span class='line'>    System.out.println(organization[0]+":"+organization[1]);
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h3>8、distinct</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// select distinct name from organization_;
</span><span class='line'>Projection projection = ProjectionFactoryUtil.distinct(ProjectionFactoryUtil.property("name"));
</span><span class='line'>dynamicQuery.setProjection(projection);</span></code></pre></td></tr></table></div></figure>


<h3>9、group by</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// select type_,count(type_) from organization_ group by type_;
</span><span class='line'>ProjectionList projectionList = ProjectionFactoryUtil.projectionList();
</span><span class='line'>projectionList.add(ProjectionFactoryUtil.property("type"));
</span><span class='line'>projectionList.add(ProjectionFactoryUtil.count("name"));
</span><span class='line'>projectionList.add(ProjectionFactoryUtil.groupProperty("type"));
</span><span class='line'>dynamicQuery.setProjection(projectionList);
</span><span class='line'>List&lt;Object[]&gt; organizations = OrganizationLocalServiceUtil.dynamicQuery(dynamicQuery);
</span><span class='line'>for(Object[] organization: organizations){
</span><span class='line'>    System.out.println(organization[0]+":"+organization[1]);
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>此外，max聚合函数调用方法如下：</p>

<p>max:ProjectionFactoryUtil.max(String propertyName)</p>

<p>其他聚合函数min、avg等可参考递推。</p>

<h3>10、分页</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// 取第1条到第10条记录
</span><span class='line'>dynamicQuery.setLimit(0,10);</span></code></pre></td></tr></table></div></figure>


<h3>11、复合主键</h3>

<p>如果实体是符合主键，我们要通过复合主键中的属性列进行查询的话，则需要在列名前面加上"primaryKey.&ldquo;，如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dynamicQuery.add(PropertyFactoryUtil.forName("primaryKey.organizationId").gt(21212L));</span></code></pre></td></tr></table></div></figure>


<h2>总结</h2>

<p>以上只是一些基本的示例，能够解决我们在日常开发中遇到的大部分问题，此外Dynamic Query API也提供了一些更高级的扩展方法（eqAll、geAll等），这些大家就一起探索吧，以后用到再更新。</p>

<p>通过以上示例，我们可以看到Liferay提供的Dynamic Query API，其实就是通过一组java方法来组成SQL语句，执行并获得结果。可能有些朋友会觉得这种方法太过于繁琐，还不如直接写SQL来得方便直接。但是站在平台数据库兼容性的角度考虑，我们就会发现这种方式非常合适。因为liferay支持mysql、oracle、db2等多种数据库，如果直接写SQL的话，很可能碰到其他数据库的语法不支持的情况发生，像oracle中的递归查询mysql就不支持等。使用Dynamic Query API的话，我们就可以使用一套统一的语法来构建SQL语句，而不需要考虑底层数据库的差异，这样整个平台的移植性和兼容性就显著提高了很多。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用Nexus OSS 2.xx搭建maven私服]]></title>
    <link href="http://www.fanqi.xyz/blog/2016/05/27/maven-pravite-server/"/>
    <updated>2016-05-27T19:16:54+08:00</updated>
    <id>http://www.fanqi.xyz/blog/2016/05/27/maven-pravite-server</id>
    <content type="html"><![CDATA[<h2>安装准备</h2>

<ol>
<li>jdk</li>
<li>maven</li>
<li><a href="http://www.sonatype.com/download-oss-sonatype">Nexus Repository Manager OSS 2.xx</a></li>
</ol>


<h2>解压并运行服务</h2>

<p>将下载的nexus-2.13.0-01-bundle.tar.zip包解压到特定的目录，这里是/Applications/
执行以下命令运行nexus:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cd /Applications/nexus-2.13.0-01-bundle/
</span><span class='line'>fanqideMacBook-Pro:nexus-2.13.0-01-bundle fanqi$ ls
</span><span class='line'>nexus-2.13.0-01   sonatype-work
</span><span class='line'>fanqideMacBook-Pro:nexus-2.13.0-01-bundle fanqi$ cd nexus-2.13.0-01/bin
</span><span class='line'>fanqideMacBook-Pro:bin fanqi$ sh nexus
</span><span class='line'>Usage: nexus { console | start | stop | restart | status | dump }
</span><span class='line'>fanqideMacBook-Pro:bin fanqi$ ./nexus start
</span><span class='line'>Starting Nexus OSS...
</span><span class='line'>Started Nexus OSS.
</span></code></pre></td></tr></table></div></figure>


<p>默认端口是：8081，通过<a href="http://localhost:8081/nexus/%E5%8F%AF%E4%BB%A5%E8%AE%BF%E9%97%AE%E7%BD%91%E7%AB%99%E3%80%82">http://localhost:8081/nexus/%E5%8F%AF%E4%BB%A5%E8%AE%BF%E9%97%AE%E7%BD%91%E7%AB%99%E3%80%82</a></p>

<h2>配置</h2>

<h2>停止服务</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>fanqideMacBook-Pro:bin fanqi$ ./nexus stop
</span><span class='line'>Stopping Nexus OSS...
</span><span class='line'>Waiting for Nexus OSS to exit...
</span><span class='line'>Waiting for Nexus OSS to exit...
</span><span class='line'>Waiting for Nexus OSS to exit...
</span><span class='line'>Stopped Nexus OSS.</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Commands]]></title>
    <link href="http://www.fanqi.xyz/blog/2016/05/27/git-commands/"/>
    <updated>2016-05-27T13:15:36+08:00</updated>
    <id>http://www.fanqi.xyz/blog/2016/05/27/git-commands</id>
    <content type="html"><![CDATA[<h2>全局设置</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git config --global user.name "fanqi"
</span><span class='line'>git config --global user.email "oschina@fanqi.xyz"</span></code></pre></td></tr></table></div></figure>


<p>C</p>

<h2>创建</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir git-repo
</span><span class='line'>cd git-repo
</span><span class='line'>git init
</span><span class='line'>touch README.md
</span><span class='line'>git add README.md
</span><span class='line'>git commit -m "first commit"
</span><span class='line'>git remote add origin https://git.oschina.net/imfanqi/gitdemo.git
</span><span class='line'>git push -u origin master</span></code></pre></td></tr></table></div></figure>


<p>Existing project?</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd existing-git-repo
</span><span class='line'>git remote add origin https://git.oschina.net/imfanqi/existing-git-repo.git
</span><span class='line'>git push -u origin master</span></code></pre></td></tr></table></div></figure>


<h2>资源</h2>

<ol>
<li><a href="http://my.oschina.net/yongbin45/blog/144250">http://my.oschina.net/yongbin45/blog/144250</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac中的SSH Keys配置]]></title>
    <link href="http://www.fanqi.xyz/blog/2016/05/27/ssh-no-password/"/>
    <updated>2016-05-27T09:51:47+08:00</updated>
    <id>http://www.fanqi.xyz/blog/2016/05/27/ssh-no-password</id>
    <content type="html"><![CDATA[<h2>SSH Keys</h2>

<p>SSH key可以让你在你的电脑和服务器之间建立安全的加密连接，同时避免每次连接都需要输入密码的麻烦。
像github、git@oschina都支持SSH key。</p>

<h2>ssh免密码配置</h2>

<p>以github上的ssh免密码配置为例，步骤如下：</p>

<h3>生成ssh密钥对</h3>

<p>使用github的邮箱账号，生成ssh密钥对。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh-keygen -t rsa -C "github@fanqi.xyz"</span></code></pre></td></tr></table></div></figure>


<p>默认情况下会在~/.ssh/目录下生成一对密钥文件，私钥id_rsa，公钥id_rsa.pub。</p>

<h3>查看公钥内容，并将其添加到github</h3>

<p>github ssh配置链接：<a href="https://github.com/settings/keys">https://github.com/settings/keys</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cat id_rsa.pub</span></code></pre></td></tr></table></div></figure>


<h3>验证是否添加成功</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh -T git@github.com
</span><span class='line'>Hi fanqi! You've successfully authenticated, but GitHub does not provide shell access.</span></code></pre></td></tr></table></div></figure>


<h2>多ssh keys配置</h2>

<p>多ssh keys配置会由两种情况：<br/>
1. 每个网站的用户名及邮箱都一致<br/>
2. 每个网站的用户名和邮箱不一致<br/>
对于第一种情况，应该是只需要生成一次密钥对，将同一个公钥添加到不同网站的ssh配置中，即可生效。  <br/>
对于第二种情况，就需要进行以下配置了。</p>

<h3>为每个网站生成特定的密钥对,指定不同的密钥文件名称</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ssh-keygen -t rsa -C "github@fanqi.xyz"
</span><span class='line'>Generating public/private rsa key pair.
</span><span class='line'>Enter file in which to save the key (/Users/fanqi/.ssh/id_rsa): /Users/fanqi/.ssh/github_rsa
</span><span class='line'>Enter passphrase (empty for no passphrase):
</span><span class='line'>Enter same passphrase again:
</span><span class='line'>Your identification has been saved in github_rsa.
</span><span class='line'>Your public key has been saved in github_rsa.pub.</span></code></pre></td></tr></table></div></figure>


<h3>添加密钥到ssh-agent</h3>

<p>ssh-agent是一种控制用来保存公钥身份验证所使用的私钥的程序，其实ssh-agent就是一个密钥管理器，运行ssh-agent以后，使用ssh-add将私钥交给ssh-agent保管，其他程序需要身份验证的时候可以将验证申请交给ssh-agent来完成整个认证过程。<br/>
ssh-agent在mac中默认是启用的，可以通过以下命名查看：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>eval "$(ssh-agent -s)"</span></code></pre></td></tr></table></div></figure>


<p>如果没有启用，则运行以下命令：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh-agent bash</span></code></pre></td></tr></table></div></figure>


<p>添加生成的 SSH key 到 ssh-agent。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh-add github_rsa</span></code></pre></td></tr></table></div></figure>


<h3>添加config配置文件</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vi ~/.ssh/config</span></code></pre></td></tr></table></div></figure>


<p>并进行如下配置：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'># github
</span><span class='line'>Host github.com
</span><span class='line'>    HostName github.com
</span><span class='line'>    PreferredAuthentications publickey
</span><span class='line'>    IdentityFile ~/.ssh/github_rsa
</span><span class='line'>
</span><span class='line'># oschina
</span><span class='line'>Host git.oschina.net
</span><span class='line'>    HostName git.oschina.net
</span><span class='line'>    PreferredAuthentications publickey
</span><span class='line'>    IdentityFile ~/.ssh/oschina_rsa
</span></code></pre></td></tr></table></div></figure>


<h2>相关资料</h2>

<ol>
<li><a href="https://segmentfault.com/a/1190000002645623">https://segmentfault.com/a/1190000002645623</a></li>
<li><a href="http://www.cnblogs.com/fanyong/p/3962455.html">http://www.cnblogs.com/fanyong/p/3962455.html</a></li>
<li><a href="https://segmentfault.com/q/1010000000835302/a-1020000000883441">https://segmentfault.com/q/1010000000835302/a-1020000000883441</a></li>
<li><a href="http://www.ooso.net/archives/644">http://www.ooso.net/archives/644</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[重置oracle 11g中sys用户的密码]]></title>
    <link href="http://www.fanqi.xyz/blog/2016/05/26/modify-the-system-users-password-in-oracle-11g/"/>
    <updated>2016-05-26T12:41:48+08:00</updated>
    <id>http://www.fanqi.xyz/blog/2016/05/26/modify-the-system-users-password-in-oracle-11g</id>
    <content type="html"><![CDATA[<p>重置oracle 11g中sys用户的密码的步骤如下： <br/>
1. 登录oracle服务器，并启动命令提示符窗口<br/>
2. 输入'sqlplus / as sysdba'，通过服务器认证连接oracle<br/>
3. 输入修改密码的指令'alter user sys identified by password'，其中password为修改后的密码。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Microsoft Windows [版本 6.1.7601]
</span><span class='line'>版权所有 (c) 2009 Microsoft Corporation。保留所有权利。
</span><span class='line'>
</span><span class='line'>C:\Users\Administrator&gt;sqlplus / as sysdba;
</span><span class='line'>
</span><span class='line'>SQL*Plus: Release 11.2.0.1.0 Production on 星期四 5月 26 12:55:36 2016
</span><span class='line'>
</span><span class='line'>Copyright (c) 1982, 2010, Oracle.  All rights reserved.
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>连接到:
</span><span class='line'>Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
</span><span class='line'>With the Partitioning, OLAP, Data Mining and Real Application Testing options
</span><span class='line'>
</span><span class='line'>SQL&gt; alter user sys identified by orcl;
</span><span class='line'>
</span><span class='line'>用户已更改。
</span><span class='line'>
</span><span class='line'>SQL&gt; exit
</span><span class='line'>从 Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
</span><span class='line'>With the Partitioning, OLAP, Data Mining and Real Application Testing options 断
</span><span class='line'>开</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Eclipse技巧]]></title>
    <link href="http://www.fanqi.xyz/blog/2016/05/26/eclipse-tips/"/>
    <updated>2016-05-26T09:27:04+08:00</updated>
    <id>http://www.fanqi.xyz/blog/2016/05/26/eclipse-tips</id>
    <content type="html"><![CDATA[<h2>批量覆盖父类方法</h2>

<ul>
<li>菜单选项：Source > Override/Implement Methods</li>
<li>mac快捷键：option+command+s</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Liferay Portlet 生命周期]]></title>
    <link href="http://www.fanqi.xyz/blog/2016/05/25/liferay-portlet-lifecycle/"/>
    <updated>2016-05-25T09:02:46+08:00</updated>
    <id>http://www.fanqi.xyz/blog/2016/05/25/liferay-portlet-lifecycle</id>
    <content type="html"><![CDATA[<h2>概述</h2>

<p>了解portlet的生命周期，对于liferay portlet开发者来说是一个基本的要求。
portlet的生命周期分为六个阶段：<br/>
1. init
1. render
1. processAction
1. processEvent
1. serveResource
1. destroy</p>

<h2>示例代码</h2>

<p>view.jsp</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;%@ taglib uri="http://java.sun.com/portlet_2_0" prefix="portlet"%&gt;
</span><span class='line'>
</span><span class='line'>&lt;portlet:defineObjects /&gt;
</span><span class='line'>
</span><span class='line'>This is the
</span><span class='line'>&lt;b&gt;Lifecycle&lt;/b&gt;
</span><span class='line'>portlet in View mode.
</span><span class='line'>&lt;br&gt;
</span><span class='line'>
</span><span class='line'>&lt;portlet:renderURL var="viewURL" /&gt;
</span><span class='line'>&lt;a href="&lt;%=viewURL%&gt;"&gt;viewURL&lt;/a&gt;
</span><span class='line'>&lt;br&gt;
</span><span class='line'>&lt;portlet:actionURL var="actionURL" name="doAction"&gt;&lt;/portlet:actionURL&gt;
</span><span class='line'>&lt;a href="&lt;%=actionURL%&gt;"&gt;actionURL&lt;/a&gt;
</span><span class='line'>&lt;br&gt;
</span><span class='line'>&lt;portlet:resourceURL var="resourceURL" /&gt;
</span><span class='line'>&lt;a href="&lt;%=resourceURL%&gt;"&gt;resourceURL&lt;/a&gt;
</span><span class='line'>&lt;br&gt;</span></code></pre></td></tr></table></div></figure>


<p>LifecyclePortlet.java</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">LifecyclePortlet</span> <span class="kd">extends</span> <span class="n">MVCPortlet</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">init</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">PortletException</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Lifecycle Phase (MVCPortlet) : init&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">.</span><span class="na">init</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">init</span><span class="o">(</span><span class="n">PortletConfig</span> <span class="n">config</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">PortletException</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Lifecycle Phase (GenericPortlet) : init&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">.</span><span class="na">init</span><span class="o">(</span><span class="n">config</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">render</span><span class="o">(</span><span class="n">RenderRequest</span> <span class="n">arg0</span><span class="o">,</span> <span class="n">RenderResponse</span> <span class="n">arg1</span><span class="o">)</span>
</span><span class='line'>          <span class="kd">throws</span> <span class="n">PortletException</span><span class="o">,</span> <span class="n">IOException</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Lifecycle Phase: render&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">.</span><span class="na">render</span><span class="o">(</span><span class="n">arg0</span><span class="o">,</span> <span class="n">arg1</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">processAction</span><span class="o">(</span><span class="n">ActionRequest</span> <span class="n">actionRequest</span><span class="o">,</span>
</span><span class='line'>          <span class="n">ActionResponse</span> <span class="n">actionResponse</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span><span class="o">,</span> <span class="n">PortletException</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Lifecycle Phase: processAction&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">.</span><span class="na">processAction</span><span class="o">(</span><span class="n">actionRequest</span><span class="o">,</span> <span class="n">actionResponse</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">doAction</span><span class="o">(</span><span class="n">ActionRequest</span> <span class="n">actionRequest</span><span class="o">,</span>
</span><span class='line'>          <span class="n">ActionResponse</span> <span class="n">actionResponse</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span><span class="o">,</span> <span class="n">PortletException</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;LifecyclePortlet: doAction&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">processEvent</span><span class="o">(</span><span class="n">EventRequest</span> <span class="n">arg0</span><span class="o">,</span> <span class="n">EventResponse</span> <span class="n">arg1</span><span class="o">)</span>
</span><span class='line'>          <span class="kd">throws</span> <span class="n">PortletException</span><span class="o">,</span> <span class="n">IOException</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Lifecycle Phase: processEvent&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">.</span><span class="na">processEvent</span><span class="o">(</span><span class="n">arg0</span><span class="o">,</span> <span class="n">arg1</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">serveResource</span><span class="o">(</span><span class="n">ResourceRequest</span> <span class="n">resourceRequest</span><span class="o">,</span>
</span><span class='line'>          <span class="n">ResourceResponse</span> <span class="n">resourceResponse</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span><span class="o">,</span>
</span><span class='line'>          <span class="n">PortletException</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Lifecycle Phase: serveResource&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">resourceResponse</span><span class="o">.</span><span class="na">setContentType</span><span class="o">(</span><span class="s">&quot;text/html;charset=UTF-8&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">PrintWriter</span> <span class="n">out</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">out</span> <span class="o">=</span> <span class="n">resourceResponse</span><span class="o">.</span><span class="na">getWriter</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">result</span> <span class="o">=</span> <span class="s">&quot;serveResource&quot;</span><span class="o">;</span>
</span><span class='line'>      <span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">result</span><span class="o">);</span>
</span><span class='line'>      <span class="n">out</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
</span><span class='line'>      <span class="n">out</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">.</span><span class="na">serveResource</span><span class="o">(</span><span class="n">resourceRequest</span><span class="o">,</span> <span class="n">resourceResponse</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">destroy</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Lifecycle Phase (GenericPortlet) : destroy&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">.</span><span class="na">destroy</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>init</h2>

<p>一个portlet在portlet容器中被部署及实例化的时候，就会调用init方法，该方法在portlet生命周期中仅仅只会被调用一次。<br/>
init阶段对应init()和init(PortletConfig config)两个实现方法，这两个方法分别定义在MVCPortlet和GenericPortlet，而GenericPortlet是MVCPortlet的父类，因此init(PortletConfig config)方法先执行。<br/>
init执行如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="mi">00</span><span class="o">:</span><span class="mi">58</span><span class="o">:</span><span class="mi">09</span><span class="o">,</span><span class="mi">934</span> <span class="n">INFO</span>  <span class="o">[</span><span class="n">localhost</span><span class="o">-</span><span class="n">startStop</span><span class="o">-</span><span class="mi">7</span><span class="o">][</span><span class="nl">PortletHotDeployListener:</span><span class="mi">344</span><span class="o">]</span> <span class="n">Registering</span> <span class="n">portlets</span> <span class="k">for</span> <span class="n">lportal</span><span class="o">-</span><span class="n">ce</span><span class="o">-</span><span class="mf">6.2</span><span class="o">.</span><span class="mi">5</span><span class="o">-</span><span class="n">lifecycle</span><span class="o">-</span><span class="n">portlet</span>
</span><span class='line'><span class="n">Lifecycle</span> <span class="nf">Phase</span> <span class="o">(</span><span class="n">GenericPortlet</span><span class="o">)</span> <span class="o">:</span> <span class="n">init</span>
</span><span class='line'><span class="n">Lifecycle</span> <span class="nf">Phase</span> <span class="o">(</span><span class="n">MVCPortlet</span><span class="o">)</span> <span class="o">:</span> <span class="n">init</span>
</span><span class='line'><span class="mi">00</span><span class="o">:</span><span class="mi">58</span><span class="o">:</span><span class="mi">09</span><span class="o">,</span><span class="mi">964</span> <span class="n">INFO</span>  <span class="o">[</span><span class="n">localhost</span><span class="o">-</span><span class="n">startStop</span><span class="o">-</span><span class="mi">7</span><span class="o">][</span><span class="nl">PortletHotDeployListener:</span><span class="mi">492</span><span class="o">]</span> <span class="mi">1</span> <span class="n">portlet</span> <span class="k">for</span> <span class="n">lportal</span><span class="o">-</span><span class="n">ce</span><span class="o">-</span><span class="mf">6.2</span><span class="o">.</span><span class="mi">5</span><span class="o">-</span><span class="n">lifecycle</span><span class="o">-</span><span class="n">portlet</span> <span class="n">is</span> <span class="n">available</span> <span class="k">for</span> <span class="n">use</span>
</span></code></pre></td></tr></table></div></figure>


<h2>render</h2>

<p>在portal页面中显示portlet的内容，就会调用render方法。<br/>
render方法就是负责生成portlethtml内容。<br/>
也可以通过renderURL来调用render方法加载不同的网页内容。
在portlet的生命周期中，render方法应该是被调用次数最多的。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Lifecycle</span> <span class="nf">Phase</span> <span class="o">(</span><span class="n">GenericPortle</span><span class="o">)</span> <span class="o">:</span> <span class="n">render</span>
</span></code></pre></td></tr></table></div></figure>


<h2>processAction</h2>

<p>当有任何action执行的时候，processAction都被先调用。
例如通过actionURL向后台action方法提交表单数据，就会先触发processAction。
在portlet的生命周期中，processAction方法能够被多次调用。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Lifecycle</span> <span class="nf">Phase</span> <span class="o">(</span><span class="n">MVCPortlet</span><span class="o">)</span> <span class="o">:</span> <span class="n">processAction</span>
</span><span class='line'><span class="nl">LifecyclePortlet:</span> <span class="n">doAction</span>
</span></code></pre></td></tr></table></div></figure>


<h2>processEvent</h2>

<p>当任何时间被触发的时候，就会调用processEvent方法。</p>

<h2>serveResource</h2>

<p>通过serveResource方法，能够获取portlet提供的服务端资源，包括html、json、xml等。<br/>
在jsp中我们能够通过请求resourceURL，来调用serveResource方法。<br/>
ajax也能够和resourceURL结合使用。<br/>
在portlet的生命周期中，serveResource能够被多次调用。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Lifecycle</span> <span class="nf">Phase</span> <span class="o">(</span><span class="n">MVCPortlet</span><span class="o">)</span> <span class="o">:</span> <span class="n">serveResource</span>
</span></code></pre></td></tr></table></div></figure>


<h2>destroy</h2>

<p>当卸载一个portlet的时候，就会调用它的destroy方法。
在portlet的生命周期中，destroy方法只会被执行一次。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="mi">01</span><span class="o">:</span><span class="mi">35</span><span class="o">:</span><span class="mi">10</span><span class="o">,</span><span class="mi">248</span> <span class="n">INFO</span>  <span class="o">[</span><span class="n">ContainerBackgroundProcessor</span><span class="o">[</span><span class="n">StandardEngine</span><span class="o">[</span><span class="n">Catalina</span><span class="o">]]][</span><span class="nl">PortletHotDeployListener:</span><span class="mi">525</span><span class="o">]</span> <span class="n">Unregistering</span> <span class="n">portlets</span> <span class="k">for</span> <span class="n">lportal</span><span class="o">-</span><span class="n">ce</span><span class="o">-</span><span class="mf">6.2</span><span class="o">.</span><span class="mi">5</span><span class="o">-</span><span class="n">demo</span><span class="o">-</span><span class="n">portlet</span>
</span><span class='line'><span class="n">Lifecycle</span> <span class="nf">Phase</span> <span class="o">(</span><span class="n">GenericPortlet</span><span class="o">)</span> <span class="o">:</span> <span class="n">destroy</span>
</span><span class='line'><span class="mi">01</span><span class="o">:</span><span class="mi">35</span><span class="o">:</span><span class="mi">10</span><span class="o">,</span><span class="mi">250</span> <span class="n">INFO</span>  <span class="o">[</span><span class="n">ContainerBackgroundProcessor</span><span class="o">[</span><span class="n">StandardEngine</span><span class="o">[</span><span class="n">Catalina</span><span class="o">]]][</span><span class="nl">PortletHotDeployListener:</span><span class="mi">560</span><span class="o">]</span> <span class="mi">1</span> <span class="n">portlet</span> <span class="k">for</span> <span class="n">lportal</span><span class="o">-</span><span class="n">ce</span><span class="o">-</span><span class="mf">6.2</span><span class="o">.</span><span class="mi">5</span><span class="o">-</span><span class="n">lifecycle</span><span class="o">-</span><span class="n">portlet</span> <span class="n">was</span> <span class="n">unregistered</span>
</span></code></pre></td></tr></table></div></figure>


<h2>参考资源</h2>

<ol>
<li><a href="http://liferaytutorial.blogspot.com/2013/04/portlet-lifecycle.html">http://liferaytutorial.blogspot.com/2013/04/portlet-lifecycle.html</a></li>
<li><a href="http://www.opensource-techblog.com/2014/12/introduction-to-portlet-phases-and.html">http://www.opensource-techblog.com/2014/12/introduction-to-portlet-phases-and.html</a></li>
<li><a href="http://proliferay.com/jsr-286-portlet-life-cycle/">http://proliferay.com/jsr-286-portlet-life-cycle/</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Oracle常用运维命令]]></title>
    <link href="http://www.fanqi.xyz/blog/2016/05/24/oracle-command/"/>
    <updated>2016-05-24T15:45:36+08:00</updated>
    <id>http://www.fanqi.xyz/blog/2016/05/24/oracle-command</id>
    <content type="html"><![CDATA[<h2>导出数据</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>exp orcl/orcl@orcl file=d:\orcl.dmp log=d:\orcl.log</span></code></pre></td></tr></table></div></figure>


<h2>导入数据</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>imp orcl/orcl@orcl  file=d:\orcl.dmp full=y</span></code></pre></td></tr></table></div></figure>


<h2>自动备份脚本（Windows Server版本）（待完善自动压缩）</h2>

<p>命名成后缀为.bat的脚本，双击即可执行备份，结合任务计划就能够实现每天自动备份。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rem if ""%1""=="""" goto end
</span><span class='line'>rem if ""%2""=="""" goto end
</span><span class='line'>
</span><span class='line'>set path=f:\db_bak_lqgt;%path%
</span><span class='line'>set now=%Date:~0,10%
</span><span class='line'>exp orcl/orcl@orcl file=f:\db_bak_orcl\orcl_%now%.dmp log=f:\db_bak_orcl\orcl_%now%.log buffer=1024000
</span><span class='line'>
</span><span class='line'>echo file in %1.dmp,%1.log
</span><span class='line'>rem pause
</span><span class='line'>
</span><span class='line'>for /f "skip=30" %%i in ('dir *.log /tc /o-d /b') do del %%i
</span><span class='line'>
</span><span class='line'>for /f "skip=30" %%i in ('dir *.dmp /tc /o-d /b') do del %%i
</span><span class='line'>
</span><span class='line'>exit
</span><span class='line'>
</span><span class='line'>:end
</span><span class='line'>echo 参数必须指定
</span><span class='line'>pause</span></code></pre></td></tr></table></div></figure>


<h2>批量删除当前用户所有表</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='SQL'><span class='line'><span class="k">SELECT</span> <span class="s1">&#39;drop table &#39;</span><span class="o">||</span><span class="k">table_name</span><span class="o">||</span><span class="s1">&#39;;&#39;</span> <span class="k">FROM</span> <span class="n">USER_TABLES</span> <span class="k">ORDER</span> <span class="k">BY</span> <span class="k">TABLE_NAME</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>不登陆启动sqlplus</h2>

<p>sqlplus /nolog</p>

<h2>使用系统用户连接数据库（只能在服务器使用）</h2>

<p>conn /as sysdba;</p>

<h2>查看表空间使用情况</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='SQL'><span class='line'><span class="k">SELECT</span>
</span><span class='line'>  <span class="k">SUM</span><span class="p">(</span><span class="n">bytes</span><span class="p">)</span> <span class="o">/</span> <span class="p">(</span><span class="mi">1024</span> <span class="o">*</span> <span class="mi">1024</span><span class="p">)</span>  <span class="ss">&quot;M free_space&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="n">tablespace_name</span>
</span><span class='line'><span class="k">FROM</span> <span class="n">dba_free_space</span>
</span><span class='line'><span class="k">GROUP</span> <span class="k">BY</span> <span class="n">tablespace_name</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">SELECT</span>
</span><span class='line'>  <span class="n">a</span><span class="p">.</span><span class="n">tablespace_name</span><span class="p">,</span>
</span><span class='line'>  <span class="n">round</span><span class="p">(</span><span class="n">a</span><span class="p">.</span><span class="n">bytes</span>  <span class="o">/</span> <span class="p">(</span><span class="mi">1024</span> <span class="o">*</span> <span class="mi">1024</span><span class="p">),</span><span class="mi">2</span><span class="p">)</span>  <span class="ss">&quot;M TOTAL&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="n">round</span><span class="p">(</span><span class="n">b</span><span class="p">.</span><span class="n">bytes</span>  <span class="o">/</span> <span class="p">(</span><span class="mi">1024</span> <span class="o">*</span> <span class="mi">1024</span><span class="p">),</span><span class="mi">2</span><span class="p">)</span>  <span class="ss">&quot;M USED&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="n">round</span><span class="p">(</span><span class="k">c</span><span class="p">.</span><span class="n">bytes</span>  <span class="o">/</span> <span class="p">(</span><span class="mi">1024</span> <span class="o">*</span> <span class="mi">1024</span><span class="p">),</span><span class="mi">2</span><span class="p">)</span>  <span class="ss">&quot;M FREE&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="n">round</span><span class="p">((</span><span class="n">b</span><span class="p">.</span><span class="n">bytes</span> <span class="o">*</span> <span class="mi">100</span><span class="p">)</span> <span class="o">/</span> <span class="n">a</span><span class="p">.</span><span class="n">bytes</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span> <span class="ss">&quot;% USED&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="n">round</span><span class="p">((</span><span class="k">c</span><span class="p">.</span><span class="n">bytes</span> <span class="o">*</span> <span class="mi">100</span><span class="p">)</span> <span class="o">/</span> <span class="n">a</span><span class="p">.</span><span class="n">bytes</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span> <span class="ss">&quot;% FREE&quot;</span>
</span><span class='line'><span class="k">FROM</span> <span class="n">sys</span><span class="p">.</span><span class="n">sm</span><span class="err">$</span><span class="n">ts_avail</span> <span class="n">a</span><span class="p">,</span> <span class="n">sys</span><span class="p">.</span><span class="n">sm</span><span class="err">$</span><span class="n">ts_used</span> <span class="n">b</span><span class="p">,</span> <span class="n">sys</span><span class="p">.</span><span class="n">sm</span><span class="err">$</span><span class="n">ts_free</span> <span class="k">c</span>
</span><span class='line'><span class="k">WHERE</span> <span class="n">a</span><span class="p">.</span><span class="n">tablespace_name</span> <span class="o">=</span> <span class="n">b</span><span class="p">.</span><span class="n">tablespace_name</span>
</span><span class='line'>      <span class="k">AND</span> <span class="n">a</span><span class="p">.</span><span class="n">tablespace_name</span> <span class="o">=</span> <span class="k">c</span><span class="p">.</span><span class="n">tablespace_name</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>增加表空间数据文件（注意重新命名数据文件）</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='SQL'><span class='line'><span class="k">ALTER</span> <span class="n">TABLESPACE</span> <span class="k">SYSTEM</span>
</span><span class='line'><span class="k">ADD</span> <span class="n">DATAFILE</span> <span class="s1">&#39;D:\oradata\orcl\SYSTEM02.DBF&#39;</span>
</span><span class='line'><span class="k">SIZE</span> <span class="mi">512</span><span class="n">m</span>
</span><span class='line'><span class="n">AUTOEXTEND</span> <span class="k">ON</span>
</span><span class='line'><span class="k">NEXT</span> <span class="mi">512</span><span class="n">m</span>
</span><span class='line'><span class="n">MAXSIZE</span> <span class="mi">4096</span><span class="n">m</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>创建表空间</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='SQL'><span class='line'><span class="k">CREATE</span> <span class="n">SMALLFILE</span> <span class="n">TABLESPACE</span> <span class="ss">&quot;LPORTAL&quot;</span> <span class="n">DATAFILE</span> <span class="s1">&#39;D:\APP\ADMINISTRATOR\ORADATA\ORCL\LPORTAL.DBF&#39;</span> <span class="k">SIZE</span> <span class="mi">100</span><span class="n">M</span> <span class="n">AUTOEXTEND</span> <span class="k">ON</span> <span class="k">NEXT</span> <span class="mi">100</span><span class="n">M</span> <span class="n">MAXSIZE</span> <span class="n">UNLIMITED</span> <span class="n">LOGGING</span> <span class="n">EXTENT</span> <span class="n">MANAGEMENT</span> <span class="k">LOCAL</span> <span class="n">SEGMENT</span> <span class="k">SPACE</span> <span class="n">MANAGEMENT</span> <span class="n">AUTO</span>
</span></code></pre></td></tr></table></div></figure>


<p>区管理本地管理，类型永久，状态读写，数据文件满后自动扩展，增量为100M，最大文件大小无限制。</p>

<h2>创建用户</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='SQL'><span class='line'><span class="k">CREATE</span> <span class="k">USER</span> <span class="ss">&quot;LPORTAL&quot;</span> <span class="n">PROFILE</span> <span class="ss">&quot;DEFAULT&quot;</span> <span class="n">IDENTIFIED</span> <span class="k">BY</span> <span class="ss">&quot;*******&quot;</span> <span class="k">DEFAULT</span> <span class="n">TABLESPACE</span> <span class="ss">&quot;LPORTAL&quot;</span> <span class="k">TEMPORARY</span> <span class="n">TABLESPACE</span> <span class="ss">&quot;TEMP&quot;</span> <span class="n">ACCOUNT</span> <span class="n">UNLOCK</span>
</span><span class='line'><span class="k">GRANT</span> <span class="ss">&quot;CONNECT&quot;</span> <span class="k">TO</span> <span class="ss">&quot;LPORTAL&quot;</span>
</span><span class='line'><span class="k">GRANT</span> <span class="ss">&quot;DBA&quot;</span> <span class="k">TO</span> <span class="ss">&quot;LPORTAL&quot;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySQL常用命令]]></title>
    <link href="http://www.fanqi.xyz/blog/2016/05/20/mysql-command/"/>
    <updated>2016-05-20T14:10:01+08:00</updated>
    <id>http://www.fanqi.xyz/blog/2016/05/20/mysql-command</id>
    <content type="html"><![CDATA[<h1>连接数据库</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mysql -u root -p</span></code></pre></td></tr></table></div></figure>


<h2>查看帮助信息</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mysql&gt; help</span></code></pre></td></tr></table></div></figure>


<h2>MySQL 命令清单</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>?         (\?) Synonym for `help'.
</span><span class='line'>clear     (\c) Clear the current input statement.
</span><span class='line'>connect   (\r) Reconnect to the server. Optional arguments are db and host.
</span><span class='line'>delimiter (\d) Set statement delimiter.
</span><span class='line'>edit      (\e) Edit command with $EDITOR.
</span><span class='line'>ego       (\G) Send command to mysql server, display result vertically.
</span><span class='line'>exit      (\q) Exit mysql. Same as quit.
</span><span class='line'>go        (\g) Send command to mysql server.
</span><span class='line'>help      (\h) Display this help.
</span><span class='line'>nopager   (\n) Disable pager, print to stdout.
</span><span class='line'>notee     (\t) Don't write into outfile.
</span><span class='line'>pager     (\P) Set PAGER [to_pager]. Print the query results via PAGER.
</span><span class='line'>print     (\p) Print current command.
</span><span class='line'>prompt    (\R) Change your mysql prompt.
</span><span class='line'>quit      (\q) Quit mysql.
</span><span class='line'>rehash    (\#) Rebuild completion hash.
</span><span class='line'>source    (\.) Execute an SQL script file. Takes a file name as an argument.
</span><span class='line'>status    (\s) Get status information from the server.
</span><span class='line'>system    (\!) Execute a system shell command.
</span><span class='line'>tee       (\T) Set outfile [to_outfile]. Append everything into given outfile.
</span><span class='line'>use       (\u) Use another database. Takes database name as argument.
</span><span class='line'>charset   (\C) Switch to another charset. Might be needed for processing binlog with multi-byte charsets.
</span><span class='line'>warnings  (\W) Show warnings after every statement.
</span><span class='line'>nowarning (\w) Don't show warnings after every statement.
</span><span class='line'>resetconnection(\x) Clean session context.</span></code></pre></td></tr></table></div></figure>


<h2>展示数据库</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>show databases;</span></code></pre></td></tr></table></div></figure>


<h2>选择要使用的数据库</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>use databasename</span></code></pre></td></tr></table></div></figure>


<h2>展示数据表</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#
</span><span class='line'>show tables;
</span><span class='line'># 模糊查询
</span><span class='line'>show tables like '%user%';</span></code></pre></td></tr></table></div></figure>


<h2>查询表</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>select * from table;
</span><span class='line'># 格式化输出
</span><span class='line'>select * from table\g</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在Mac中搭建一个本地svn服务器]]></title>
    <link href="http://www.fanqi.xyz/blog/2016/05/19/create-a-local-svn-server-in-mac/"/>
    <updated>2016-05-19T15:15:57+08:00</updated>
    <id>http://www.fanqi.xyz/blog/2016/05/19/create-a-local-svn-server-in-mac</id>
    <content type="html"><![CDATA[<blockquote><p>其实mac中本身就自带了svn服务端，所以创建一个本地的svn服务器就不叫容易。</p></blockquote>

<h2>创建svn服务器的目录，并进入该目录</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>svnadmin create /repositories/svnadmin/
</span><span class='line'>cd /repositories/svnadmin</span></code></pre></td></tr></table></div></figure>


<h1>#</h1>

<h2>启动svn server</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>svnserve -d -r /repositories/svnadmin</span></code></pre></td></tr></table></div></figure>


<h2>停止svn server</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>killall -9 svnserve</span></code></pre></td></tr></table></div></figure>


<h2>将server加入启动</h2>

<h2>参考资源</h2>

<ol>
<li><a href="http://blog.csdn.net/lys07962000/article/details/17917467">http://blog.csdn.net/lys07962000/article/details/17917467</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[程序猿专属主题]]></title>
    <link href="http://www.fanqi.xyz/blog/2016/05/19/editor-themes-for-developers/"/>
    <updated>2016-05-19T13:40:01+08:00</updated>
    <id>http://www.fanqi.xyz/blog/2016/05/19/editor-themes-for-developers</id>
    <content type="html"><![CDATA[<p>我们程序猿日常工作会使用到大量的IDE以及编辑器，例如sublime、atom、idea、eclipse，如果拥有一套统一的赏心悦目的编辑主题，在一致的字体及样式下工作，无疑能够让我们更愉悦、更高效的工作。 <br/>
以下就是我收集的能够在多个应用中使用的主题，排名不分先后。 <br/>
1. <a href="https://github.com/chriskempson/tomorrow-theme">Tomorrow Theme</a><br/>
2. <a href="https://github.com/altercation/solarized">Solarized Theme</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac快捷键]]></title>
    <link href="http://www.fanqi.xyz/blog/2016/05/19/mac-shortcuts/"/>
    <updated>2016-05-19T12:38:41+08:00</updated>
    <id>http://www.fanqi.xyz/blog/2016/05/19/mac-shortcuts</id>
    <content type="html"><![CDATA[<p>cmd+c：复制</p>

<p>cmd+v：粘贴</p>

<p>cmd+a：全选</p>

<p>cmd+delete：删除当前行。选中文件的时候直接删除文件。</p>

<p>shift+方向键：这个在选择文本的时候很有用，可以选择单个字符或者整行，多使用才能找到手感。</p>

<p>cmd+shift+左右方向键：这个可以快速选择当前行，用的也很多。</p>

<p>ctrl+a：跑到当前行的最前端，使用频次很高。</p>

<p>ctrl+e：跑到当前行的最尾端，使用频次很高。</p>

<p>cmd+tab：切换应用，这是大部分人用的最多的方式，却不是最高效的方式，后面会介绍其他方式。</p>

<p>cmd+`: 切换同一应用的窗口，这个非常实用。比如打开多个 xcode 工程的情况下，快速的在不同项目之间切换。 Finder，Firefox等场景下都支持。</p>

<p>cmd+w：关闭当前窗口，后面会介绍其他方式，同样高效。</p>

<p>cmd+q：关闭当前应用。</p>

<p>cmd+n：新建窗口，比如打开新的 Finder 窗口，配合 cmd+w 很实用。</p>

<p>cmd+t：新建 tab，支持 tab 模式的应用一般都支持这个快捷键。比如在safari，firefox，chrome下新建tab。</p>

<p>cmd+i: 显示当前文件的信息，查看文件大小，图片宽高的时候有用。</p>

<p>选中文件按空格预览：预览图片或者 pdf 文件时有用。配合方向键可以快速预览多张图片。</p>

<p>短按电源键：可以关闭屏幕，但不能太短，多按几次就有手感了。</p>

<h2>引用资源</h2>

<ol>
<li><a href="http://mp.weixin.qq.com/s?__biz=MTMwNDMwODQ0MQ==&amp;mid=2652840418&amp;idx=1&amp;sn=b4c4788f5b3f4380bac380a9ebb34bce&amp;scene=21#wechat_redirect">用 Mac 提升工作效率的 5 种方法</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Spring中的Propagation属性配置]]></title>
    <link href="http://www.fanqi.xyz/blog/2016/05/18/the-propagation-properties-in-the-spring/"/>
    <updated>2016-05-18T11:25:34+08:00</updated>
    <id>http://www.fanqi.xyz/blog/2016/05/18/the-propagation-properties-in-the-spring</id>
    <content type="html"><![CDATA[<h2>应用场景</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;tx:advice id="txadvice" transaction-manager="transactionManager"&gt;
</span><span class='line'>    &lt;tx:attributes&gt;
</span><span class='line'>        &lt;tx:method name="*" propagation="REQUIRED"/&gt;
</span><span class='line'>    &lt;/tx:attributes&gt;
</span><span class='line'>&lt;/tx:advice&gt;</span></code></pre></td></tr></table></div></figure>


<p>其中，<code>propagation</code>的属性值有<code>REQUIRED</code>、<code>SUPPORTS</code>、<code>MANDATORY</code>、<code>REQUIRES_NEW</code>、<code>NOT_SUPPORTED</code>、<code>NEVER</code>、<code>NESTED</code>等7种，默认是<code>REQUIRED</code>。<br/>
1. <code>REQUIRED</code>:如果存在一个事务，则支持当前事务;如果没有事务则开启。<br/>
2. <code>SUPPORTS</code>:如果存在一个事务，支持当前事务;如果没有事务，则非事务的执行。<br/>
3. <code>MANDATORY</code>:如果已经存在一个事务，支持当前事务;如果没有一个活动的事务，则抛出异常。<br/>
4. <code>REQUIRES_NEW</code>:总是开启一个新的事务;如果一个事务存在，则将这个存在的事务挂起。<br/>
5. <code>NOT_SUPPORTED</code>:总是非事务地执行;并挂起任何存在的事务。<br/>
6. <code>NEVER</code>:总是非事务地执行，如果存在一个活动事务，则抛出异常。<br/>
7. <code>NESTED</code>:如果一个活动的事务存在，则运行在一个嵌套的事务中，如果没有活动事务，则按<code>REQUIRED</code>属性执行。</p>

<h2>解决嵌套事务异常的问题</h2>

<h3>源代码</h3>

<p>DataSyncManager.java</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">DataSyncManager</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">syncData</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">syncData</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">syncData</span><span class="o">(</span><span class="n">String</span> <span class="n">code</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">//递归同步</span>
</span><span class='line'>    <span class="c1">//syncData(code)</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>applicationContext.xml:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;tx:advice</span> <span class="na">id=</span><span class="s">&quot;txadvice&quot;</span> <span class="na">transaction-manager=</span><span class="s">&quot;transactionManager&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;tx:attributes&gt;</span>
</span><span class='line'>        <span class="nt">&lt;tx:method</span> <span class="na">name=</span><span class="s">&quot;*&quot;</span> <span class="na">propagation=</span><span class="s">&quot;REQUIRED&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>        <span class="nt">&lt;tx:method</span> <span class="na">name=</span><span class="s">&quot;sync*&quot;</span> <span class="na">propagation=</span><span class="s">&quot;REQUIRED&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/tx:attributes&gt;</span>
</span><span class='line'><span class="nt">&lt;/tx:advice&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>异常信息</h3>

<p>每次数据同步完成之后就会爆出错误，然后事务回滚，同步失败。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>ERROR [org.quarz.core.ErrorLogger 2185] - <span class="nt">&lt;Job</span> <span class="err">&lt;DEFAULT.syncDataListenerJobThrew</span> <span class="err">an</span> <span class="err">exception.</span><span class="nt">&gt;</span>
</span><span class='line'>org.springframework.scheduling.quartz.JobMethodInvocationFailedException: Invocation of method &#39;syncData&#39; on target class [class com.text.db.manager.DataSyncManager$$EnhancerByCGLIB$$b012b05e] failed; nested exception is org.springframework.transaction.UnexceptedRollbackException: Transaction rolled back because it has been marked as rollback-only
</span><span class='line'>...
</span><span class='line'>&gt;
</span></code></pre></td></tr></table></div></figure>


<h3>问题分析</h3>

<p>根据原有配置，执行syncData()方法会创建事务，随后执行syncData(code)方法，以及递归方法都会支持当前事务，从而形成一个庞大的事务，在同步多天历史数据的情况下，很不可取，一旦出了问题，所有数据都会回滚。</p>

<h3>解决办法</h3>

<p>将事务进行拆分，一旦某阶段的数据同步成功，就提交事务，下一阶段的数据同步重新创建事务。<br/>
DataSyncManager.java</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">DataSyncManager</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">initSyncData</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">syncData</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">syncData</span><span class="o">(</span><span class="n">String</span> <span class="n">code</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">//递归同步</span>
</span><span class='line'>    <span class="c1">//syncData(code)</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>applicationContext.xml:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;tx:advice</span> <span class="na">id=</span><span class="s">&quot;txadvice&quot;</span> <span class="na">transaction-manager=</span><span class="s">&quot;transactionManager&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;tx:attributes&gt;</span>
</span><span class='line'>        <span class="nt">&lt;tx:method</span> <span class="na">name=</span><span class="s">&quot;syncData&quot;</span> <span class="na">propagation=</span><span class="s">&quot;REQUIRES_NEW&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>        <span class="nt">&lt;tx:method</span> <span class="na">name=</span><span class="s">&quot;*&quot;</span> <span class="na">propagation=</span><span class="s">&quot;SUPPORTS&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/tx:attributes&gt;</span>
</span><span class='line'><span class="nt">&lt;/tx:advice&gt;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SVN命令汇总]]></title>
    <link href="http://www.fanqi.xyz/blog/2016/05/18/the-svn-command-summary/"/>
    <updated>2016-05-18T06:56:57+08:00</updated>
    <id>http://www.fanqi.xyz/blog/2016/05/18/the-svn-command-summary</id>
    <content type="html"><![CDATA[<p><a href="http://subversion.apache.org/">Subversion</a> 是一个版本控制工具。Mac自带该软件，但是Mac上好用的客户端软件不多，因此有必要掌握svn的基本命令。</p>

<h2>基本用法</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>svn &lt;子命令&gt; [可选项] [参数]</span></code></pre></td></tr></table></div></figure>


<p></p>

<h2>查看版本信息</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># 查看版本信息和资源访问信息
</span><span class='line'>svn --version
</span><span class='line'>
</span><span class='line'># 仅仅查看版本信息
</span><span class='line'>svn --version --quiet</span></code></pre></td></tr></table></div></figure>


<h2>可用子命令</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>添加：add
</span><span class='line'>blame (praise, annotate, ann)
</span><span class='line'>cat
</span><span class='line'>changelist (cl)
</span><span class='line'>检出：checkout (co)
</span><span class='line'>清理：cleanup
</span><span class='line'>提交：commit (ci)
</span><span class='line'>复制：copy (cp)
</span><span class='line'>删除：delete (del, remove, rm)
</span><span class='line'>diff (di)
</span><span class='line'>导出：export
</span><span class='line'>帮助：help (?, h)
</span><span class='line'>导入：import
</span><span class='line'>信息：info
</span><span class='line'>列表：list (ls)
</span><span class='line'>锁定：lock
</span><span class='line'>日志：log
</span><span class='line'>合并：merge
</span><span class='line'>合并信息：mergeinfo
</span><span class='line'>创建文件夹：mkdir
</span><span class='line'>移动：move (mv, rename, ren)
</span><span class='line'>patch
</span><span class='line'>propdel (pdel, pd)
</span><span class='line'>propedit (pedit, pe)
</span><span class='line'>propget (pget, pg)
</span><span class='line'>proplist (plist, pl)
</span><span class='line'>propset (pset, ps)
</span><span class='line'>relocate
</span><span class='line'>resolve
</span><span class='line'>resolved
</span><span class='line'>revert
</span><span class='line'>状态：status (stat, st)
</span><span class='line'>switch (sw)
</span><span class='line'>解锁：unlock
</span><span class='line'>更新：update (up)
</span><span class='line'>升级：upgrade</span></code></pre></td></tr></table></div></figure>


<h2>help 帮助信息</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># 查看全局帮助信息
</span><span class='line'>svn help
</span><span class='line'># 查看特定命令的帮助信息
</span><span class='line'>svn help &lt;子命令&gt;</span></code></pre></td></tr></table></div></figure>


<h2>checkout 检查项目</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>svn checkout svn://localhost/svn
</span><span class='line'>
</span><span class='line'>svn co svn://localhost/svn</span></code></pre></td></tr></table></div></figure>


<h2>commit 提交项目</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># 提交一个文件
</span><span class='line'>svn commit -m '第一次提交' Test.java</span></code></pre></td></tr></table></div></figure>


<h2>update 更新</h2>

<p>更新当前目录及子目录：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>svn update</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[前端开发资源]]></title>
    <link href="http://www.fanqi.xyz/blog/2016/05/17/the-front-end-development-resources/"/>
    <updated>2016-05-17T12:44:30+08:00</updated>
    <id>http://www.fanqi.xyz/blog/2016/05/17/the-front-end-development-resources</id>
    <content type="html"><![CDATA[<h2>工具篇</h2>

<h2>JSLint</h2>

<p>检查JavaScript正确性。</p>

<h2>All JS</h2>

<p>展示网页中的所有JS</p>

<h2>All JS Beautified</h2>

<p>美化网页中的所有JS，加强可读性</p>

<h2>All JS Minified</h2>

<p>压缩网页中所有的JS，删除换行符、空格等</p>

<h2>All CSS</h2>

<p>展示网页中的所有CSS</p>

<h2>YUI CSS Compressor</h2>

<p>压缩CSS</p>

<h2>All Smush.it</h2>

<p>优化压缩图片</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[优化Octopress的访问速度]]></title>
    <link href="http://www.fanqi.xyz/blog/2016/05/13/let-octopress-faster-and-faster/"/>
    <updated>2016-05-13T21:13:29+08:00</updated>
    <id>http://www.fanqi.xyz/blog/2016/05/13/let-octopress-faster-and-faster</id>
    <content type="html"><![CDATA[<p>今天重启了电脑，发现在没有科学上网的情况下，发现访问博客的时候，页面加载非常慢。通过chrome开发工具查看访问博客时的网络情况，发现导致博客巨慢无比原因是以下几个资源无法正常访问：</p>

<ol>
<li><a href="http://fonts.googleapis.com/css?family=PT+Serif:regular,italic,bold,bolditalic">http://fonts.googleapis.com/css?family=PT+Serif:regular,italic,bold,bolditalic</a></li>
<li><a href="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js">http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js</a></li>
<li><a href="http://fonts.googleapis.com/css?family=PT+Sans:regular,italic,bold,bolditalic">http://fonts.googleapis.com/css?family=PT+Sans:regular,italic,bold,bolditalic</a></li>
<li><a href="http://platform.twitter.com/widgets.js">http://platform.twitter.com/widgets.js</a></li>
</ol>


<h2>优化Octopress的访问速度</h2>

<h3>1.使用360网站卫士代理访问Google前端公共库</h3>

<p>调用Google前端公共库的文件是<code>octopress/source/_includes/head.html</code>，将其中的<code>ajax.googleapis.com</code>修改为<code>ajax.useso.com</code>。</p>

<h3>2.使用360网站卫士代理访问Google免费字体库</h3>

<p>调用Google免费字体库的文件是<code>/octopress/source/_includes/custom/head.html</code>，将其中的<code>fonts.googleapis.com</code>修改为：<code>fonts.useso.com</code>。</p>

<h3>3.禁用twitter分享按钮</h3>

<p>在<code>octopress/_config.yml</code>中找到<code>twitter_tweet_button</code>配置项，将<code>true</code>改为<code>false</code>。</p>

<h3>4.重新生成静态博客及部署</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake generate
</span><span class='line'>rake deploy</span></code></pre></td></tr></table></div></figure>


<p>之后我们就可以畅快的访问Octopress博客网站了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用Octopress搭建静态博客网站]]></title>
    <link href="http://www.fanqi.xyz/blog/2016/05/13/use-octopress-build-static-blog-site/"/>
    <updated>2016-05-13T18:39:41+08:00</updated>
    <id>http://www.fanqi.xyz/blog/2016/05/13/use-octopress-build-static-blog-site</id>
    <content type="html"><![CDATA[<h2>Octopress 介绍</h2>

<blockquote><p>Octopress is a blogging framework for hackers.</p></blockquote>

<p>如官网说的一样，Octopress是一个为黑客而生的博客框架，比较适合有一定shell和git命令基础，同时又喜欢折腾、热爱分享的童鞋，否则Octopress可能并不是一个合适的选择。</p>

<h2>在Mac上安装Octopress</h2>

<h3>安装Ruby</h3>

<p>安装Ruby之后将gem源修改为国内淘宝源。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl -L https://get.rvm.io | bash -s stable
</span><span class='line'>source ~/.rvm/scripts/rvm
</span><span class='line'>rvm -v
</span><span class='line'>rvm install 2.0.0
</span><span class='line'>gem -v
</span><span class='line'>gem sources --remove https://rubygems.org/
</span><span class='line'>gem sources -a https://ruby.taobao.org/
</span><span class='line'>gem sources -l</span></code></pre></td></tr></table></div></figure>


<h3>克隆Octopress至本地</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'>cd octopress</span></code></pre></td></tr></table></div></figure>


<h3>修改gem源</h3>

<p>使用<code>vi Gemfile</code>命令修改gem源，将
<code>https://rubygems.org</code>
改为<code>https://ruby.taobao.org</code>。</p>

<h3>安装依赖包</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install bundler
</span><span class='line'>bundle install</span></code></pre></td></tr></table></div></figure>


<h3>安装默认主题</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake install</span></code></pre></td></tr></table></div></figure>


<h3>预览</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake preview</span></code></pre></td></tr></table></div></figure>


<p>在通过浏览器打开 <a href="http://localhost:4000/">http://localhost:4000/</a> ，即可看到博客界面。</p>

<h2>编写博客</h2>

<p>编辑器推荐使用atom，默认安装了Markdown preview插件。</p>

<h3>新建博客</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake new_post["title"]</span></code></pre></td></tr></table></div></figure>


<h3>新建单页面</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake new_page[about]</span></code></pre></td></tr></table></div></figure>


<h3>生成博客</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake generate</span></code></pre></td></tr></table></div></figure>


<p>在<code>rake preview</code>的模式下，服务器会检查文件变化，自动生成。</p>

<h3>预览</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake preview</span></code></pre></td></tr></table></div></figure>


<p>默认情况下，访问单页面需要在url后面追加/页面名称，例如 <a href="http://localhost:4000/about">http://localhost:4000/about</a> 才能查看about页面内容。</p>

<h2>部署到github</h2>

<h3>创建仓库</h3>

<p>仓库名：username.github.io，其中<code>username</code>必须与github的用户名一致。
创建成功之后，就可以通过 <a href="http://username.github.io">http://username.github.io</a> 进行访问。</p>

<h3>与本地 Octopress 目录绑定</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake setup_github_pages</span></code></pre></td></tr></table></div></figure>


<p><code>Repository url</code>可以有两种方式配置：</p>

<ul>
<li>git@github.com:your_username/your_username.github.io.git</li>
<li><a href="https://github.com/your_username/your_username.github.io">https://github.com/your_username/your_username.github.io</a></li>
</ul>


<h3>将博客部署到github上</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake deploy</span></code></pre></td></tr></table></div></figure>


<h2>自定义域名</h2>

<h3>在github上绑定自定义域名</h3>

<p>1.创建 source/CNAME 文件并指定域名</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>echo 'domain.com' &gt;&gt; source/CNAME</span></code></pre></td></tr></table></div></figure>


<p>2.重新部署到github上</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake deploy</span></code></pre></td></tr></table></div></figure>


<h3>解析域名至github</h3>

<p>在域名解析中创建CNAME记录指向username.github.io。</p>

<h2>结束语</h2>

<p>至此，一个拥有独立域名的静态博客网站就建好了，开始像黑客一样写博客吧。</p>
]]></content>
  </entry>
  
</feed>
